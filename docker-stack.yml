version: '3.7'

volumes:
  grafana_data: {}

services:
  prometheus:
    image: prom/prometheus:v2.36.2
    container_name: zima-prometheus
    volumes:
      - ./prometheus:/etc/prometheus
      - /srv/dev-disk-by-uuid-D6C49AAEC49A8FFB/prometheus:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=2y'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
    ports:
      - 9090:9090
    depends_on:
      - cadvisor
#      - pushgateway
    deploy:
      placement:
        constraints:
          - node.role==manager
      restart_policy:
        condition: on-failure

  node-exporter:
    image: quay.io/prometheus/node-exporter:latest
    container_name: zima-node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /srv/dev-disk-by-uuid-D6C49AAEC49A8FFB:/host/srv/dev-disk-by-uuid-D6C49AAEC49A8FFB:ro
      - /:/rootfs:ro
    command: 
      - '--path.procfs=/host/proc' 
      - '--path.sysfs=/host/sys'
      - '--path.rootfs=/host'
        #- '--path.rootfs=/host/srv/dev-disk-by-uuid-D6C49AAEC49A8FFB'
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    ports:
      - 9100:9100
    deploy:
      mode: global
      restart_policy:
        condition: on-failure

  cadvisor:
    image: gcr.io/cadvisor/cadvisor
    container_name: zima-cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    ports:
      - 8080:8080
    deploy:
      mode: global
      restart_policy:
          condition: on-failure
  grafana:
    image: grafana/grafana
    container_name: zima-grafana
    depends_on:
      - prometheus
    ports:
      - 3000:3000
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    env_file:
      - ./grafana/config.monitoring
    user: "472"
    deploy:
      placement:
        constraints:
          - node.role==manager
      restart_policy:
        condition: on-failure
  mosquitto:
    image: eclipse-mosquitto:latest
    container_name: zima-mosquitto
    ports:
      - 1883:1883
      - 9001:9001
    volumes:
      - /opt/appdata/mosquitto:/mosquitto/config
      - /opt/appdata/mosquitto/data:/mosquitto/data
      - /opt/appdata/mosquitto/log:/mosquitto/log

  mqtt-exporter:
    image: kpetrem/mqtt-exporter
    container_name: zima-mqtt-exporter
    ports:
      - 9000:9000
    environment:
      - MQTT_ADDRESS=192.168.0.38
      - MQTT_PORT=1883
        #- LOG_LEVEL=DEBUG
      - MQTT_TOPIC=device/#
      - MQTT_V5_PROTOCOL=True
      - PROMETHEUS_PORT=9000
    restart: unless-stopped

  speedtest:
    container_name: zima-speedtest
    tty: true
    stdin_open: true
    expose:
      - 9798
    ports:
      - 9798:9798
    image: miguelndecarvalho/speedtest-exporter
    restart: always
  daikin-prometheus-exporter:
    container_name: zima-daikin-prometheus-exporter
    build: daikin-prometheus-exporter/.
    ports:
      - 5555:5555
    environment:
      X_API_KEY: ${X_API_KEY}
      DAIKIN_CACHE_FOR: 240
      INTEGRATOR_TOKEN: ${INTEGRATOR_TOKEN}
      ACCOUNT_EMAIL: ${ACCOUNT_EMAIL}
      DEVICE_ID: ${DEVICE_ID}
      DAIKIN_EXPORTER_PORT: 5555
    restart: unless-stopped
      #xcel_itron2mqtt:
      #image: ghcr.io/zaknye/xcel_itron2mqtt:main
      #restart: unless-stopped
      #volumes:
      #- ~/prometheus/xcel_itron2mqtt/scripts/certs:/opt/xcel_itron2mqtt/certs
      #links:
      #- mosquitto
      #environment:
      #- MQTT_SERVER=192.168.0.38

#  pushgateway:
#    image: prom/pushgateway
#    deploy:
#      mode: global
#      restart_policy:
#        condition: on-failure
#    ports:
#      - 9091:9091
#    networks:
#      - monitor-net
